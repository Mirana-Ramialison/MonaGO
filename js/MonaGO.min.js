function createGeneInfo(){gene_info={},go_inf.forEach(function(e,n){var t=n;e.genes.forEach(function(e,n){if(void 0!=gene_info[e]){var r=";"+t.toString();gene_info[e]=gene_info[e]+r}else gene_info[e]=t.toString()})})}function createInteractionGenes(e){dic={};for(var n=e.length,t=0;n>t;t++)for(var r=0;n>r;r++)if(t==r)dic[t+"-"+r]="";else{var i=e[t].genes,o=e[r].genes,a=i.intersection(o);dic[t+"-"+r]=a.getGeneString("|")}}function GOFilter(){var e=[];go_inf.map(function(n,t){Number(n.pVal)<.05&&e.push(n)}),go_inf=e,nodesSize=go_inf.length}function getMinPval(){var e=Number(go_inf[0].pVal);for(i=0;i<nodesSize;i++)Number(go_inf[i].pVal)<e&&(e=Number(go_inf[i].pVal));return e}function parentGO(e){goids=[];var n=new Queue,t=[e,1];for(goids.push(t),n.enqueue(t);!n.isEmpty();)if(t=n.dequeue(),go=t[0],level=t[1],current=GO(go),void 0!=current)for(var r=current.p,i=0,o=r.length;o>i;i++)void 0!=r[i]&&(e=r[i],t=[e,level+1],goids.push(t),n.enqueue(t));return goids}function createD3Structure(e,n){e=getUniqueGoid(e),nodes=[],links=[],nodeIndex={},levels=e[e.length-1][1],level_width={};for(var t=0,r=e.length;r>t;t++)go_level=e[t],goid=go_level[0],level=go_level[1],node={},node.name=GO(goid).n,node.id=goid,node.r=10,node.is="node",nodeIndex[goid]=t,void 0==level_width[level]?(level_width[level]=1,node.position=1):(level_width[level]++,node.position=level_width[level]),nodes.push(node);for(var t=0,r=e.length;r>t;t++)if(go_level=e[t],goid=go_level[0],level=go_level[1],parents=GO(goid).p,parents.length>0)for(var i=0,o=parents.length;o>i;i++)parent=parents[i],pgoid=parent,pIndex=nodeIndex[pgoid],pgoid==n&&(nodes[t].is="child",nodes[t].r=30),void 0!=pIndex&&(link={},link.source=pIndex,link.target=t,link.value=5,links.push(link));else nodes[t].fixed=!0,nodes[t].x=width/2,nodes[t].y=50,nodes[t].is="root";return nodes[nodeIndex[n]].fixed=!0,nodes[nodeIndex[n]].x=width/2,nodes[nodeIndex[n]].y=height-20,nodes[nodeIndex[n]].is="target",{nodes:nodes,links:links}}function GO(e){return goNodes[e]}function recursiveAncestor(e){goids=[],goids.push(e);var n=GO(e);if(n.p.length>0)for(var t=0,r=n.p.length;r>t;t++)pgoid=n.p[t],goids=goids.concat(recursiveAncestor(pgoid));return goids}function getUniqueGoid(e){var n={},t=[];for(i=0;i<e.length;i++)n[e[i][0]]=e[i][1];for(i in n)arr=[i,n[i]],t.push(arr);return t}function drawGraph(e){force.nodes(e.nodes).links(e.links);var n=d3.scale.category10(),t=d3.scale.linear().domain([0,d3.max(e.nodes,function(e){return e.r})]).range([5,10]),r=go_chart.selectAll("line.link").data(e.links).enter().append("line").attr("class","link").style("stroke",function(e,t){return n(e.type)}).style("stroke-width",2),i=go_chart.selectAll("circle.node").data(e.nodes).enter().append("circle").attr("class","node").attr("r",function(e){return t(e.r)}).style("fill",function(e,n){return"root"==e.is?"black":"target"==e.is||"child"==e.is?"orange":"lightblue"}).call(force.drag).on("click",function(e,n){}),o=go_chart.selectAll("text.node").data(e.nodes).enter().append("text").attr("class","node").attr("displayState","y").text(function(e){return e.name});force.on("tick",function(e){r.attr("x1",function(e){return e.source.x}).attr("y1",function(e){return e.source.y}).attr("x2",function(e){return e.target.x}).attr("y2",function(e){return e.target.y}),i.attr("cx",function(e){return e.x}).attr("cy",function(e){return e.y}),o.attr("x",function(e){return e.x}).attr("y",function(e){return e.y+t(e.r)+10})}),force.start()}function fixAllNodes(){for(var e=0,n=force.nodes().length;n>e;e++)force.nodes()[e].fixed=!0}function unfixAllNodes(){for(var e=0,n=force.nodes().length;n>e;e++)"node"==force.nodes()[e].is&&(force.nodes()[e].fixed=!1)}function update(e){struct=parentGO(e),data=createD3Structure(struct,e),go_chart.selectAll("line.link").remove(),go_chart.selectAll("circle.node").remove(),go_chart.selectAll("text.node").remove(),drawGraph(data)}function getMaxPval(){var e=Number(go_inf[0].pVal);for(i=0;i<nodesSize;i++)Number(go_inf[i].pVal)>e&&(e=Number(go_inf[i].pVal));return e}function sortGO_inf(){function e(e,n){return n>e?1:e>n?-1:0}for(i=0;i<nodesSize;i++)pVal_sort[i]=Number(go_inf[i].pVal);pVal_sort.sort(e)}function determineLabelSize(){function e(e,n,t){for(i=0;i<seperated_points.length;i++)if(seperated_points[i]<=e&&e<=seperated_points[i+1])return(10-i)*(t-n)/10+n}var n=15,t=30;go_inf.map(function(r){r.size=e(r.pVal,n,t)})}function getColor(e,n){for(i=0;i<seperated_points.length-1;i++)if(seperated_points[i]<=e&&e<seperated_points[i+1])return color_scheme[i];return seperated_points[seperated_points.length-1]==e?color_scheme[9]:void 0}function createPvalLabelPanel(e){for(titie="p-value",panel.push(titie),panel.push("---------------------"),i=0;i<seperated_points.length-1;i++)from=seperated_points[i],to=seperated_points[i+1],panel.push('<i style="background:'+getColor(from,e)+'" ></i> '+from.toString().substring(0,5)+" - "+to.toString().substring(0,5));panelLabel=panel.join("<br>"),$("#pval-label").append(panelLabel)}function transformIndex(e){function n(e){var n=0;return clusterHierNodesStatus.map(function(t,r){t.index==e&&(n=r)}),n}return nodesSize>e?array_order.indexOf(parseInt(e)):n(parseInt(e))}function getMemKey(e){var n=[];for(var t in e)n.push(t);return n}function transformPolarCoordinatesTORectangleCoordinates(e,n){return x=e*Math.sin(n),y=e*Math.cos(n),[x,y]}function darwClusterNodes(){function e(e,n,t){var r,i;return i="rotate("+(180*e.angle/Math.PI-90)+")translate("+(e.radius+5)+",0)",r=d3.interpolate(t,i),function(e){return r(e)}}clusterHierNodeView=clusterHierNodeView.data(clusterHierNodesStatus,function(e){return e.index}),clusterHierNodeView.enter().append("g"),clusterHierNodeView.exit().remove(),clusterHierNodeView.transition().duration(500).attrTween("transform",e).attr("class","clusterNodeView"),clusterHierNodeView.selectAll("circle").remove(),circle=clusterHierNodeView.append("circle"),circle.attr("r",function(e){return 6}).style("fill",function(e){return"Expanded"==e.status?"rgb(94, 141, 141)":"red"}).on("click",onClusterNodeClick).append("title").text(function(e,n){return"Click to cluster"}),clusterHierNodeTextView.selectAll("text").remove(),clusterHierNodeTextView=clusterHierNodeTextView.data(clusterHierNodesStatus,function(e){return e.index}),clusterHierNodeTextView.enter().append("g"),clusterHierNodeTextView.exit().remove(),clusterHierNodeTextView.transition().duration(500).attrTween("transform",e).attr("class","clusterText"),textBackground=clusterHierNodeTextView.append("g"),text=textBackground.attr("transform",function(e){return"rotate("+(90-180*e.angle/Math.PI)+")translate(0,5)"}).append("text"),text.attr("height","auto").attr("text-anchor","middle").text(function(e){return e.numOfOverlappingGenes}).attr("style","text-align:center;padding:2px;margin:2px;fill:white").on("click",onClusterNodeClick).append("title").text(function(e,n){return"Click to cluster"})}function drawArc(e){var n=[],t=[];e.map(function(e){void 0!=e&&n.push(e)}),n.map(function(e){var n=e[0],r=e[1];nodesSize>n?(n=transformIndex(n),firstNode=chordGroupsNodePosition[n]):(n=transformIndex(n),firstNode=clusterHierNodesStatus[n]),nodesSize>r?(r=transformIndex(r),secondNode=chordGroupsNodePosition[r]):(r=transformIndex(r),secondNode=clusterHierNodesStatus[r]),firstNode.angle-secondNode.angle>Math.PI?(startAngle=secondNode.angle,endAngle=firstNode.angle):(startAngle=firstNode.angle,endAngle=secondNode.angle),firstNode.radius>secondNode.radius?radius=firstNode.radius:radius=secondNode.radius,t.push({index:e[0],radius:radius,startAngle:startAngle,endAngle:endAngle})}),clusterArc=clusterArc.data(t,function(e){return e.index}),clusterArc.enter().append("path"),clusterArc.exit().remove(),clusterArc.style("fill","green").attr("class","clusterArc").transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.radius+10).outerRadius(e.radius+11).startAngle(e.startAngle).endAngle(e.endAngle);return n()})}function drawLine(e){var n=[],t=[],r=[];e.map(function(e){void 0!=e&&n.push(e)}),n.map(function(e){firstNodeIndex=e[0],secondNodeIndex=e[1],clusterNodeIndex=e[2],firstNodeIndex<nodesSize?(firstNodeIndex=transformIndex(firstNodeIndex),firstNode=chordGroupsNodePosition[firstNodeIndex]):(firstNodeIndex=transformIndex(firstNodeIndex),firstNode=clusterHierNodesStatus[firstNodeIndex]),secondNodeIndex<nodesSize?(secondNodeIndex=transformIndex(secondNodeIndex),secondNode=chordGroupsNodePosition[secondNodeIndex]):(secondNodeIndex=transformIndex(secondNodeIndex),secondNode=clusterHierNodesStatus[secondNodeIndex]),clusterNodeIndex<nodesSize?(clusterNodeIndex=transformIndex(clusterNodeIndex),clusterNode=chordGroupsNodePosition[clusterNodeIndex]):(clusterNodeIndex=transformIndex(clusterNodeIndex),clusterNode=clusterHierNodesStatus[clusterNodeIndex]),firstLineAngle=firstNode.angle,firstLineInnerPosition=firstNode.radius,firstLineOuterPosition=clusterNode.radius,secondLineAngle=secondNode.angle,secondLineInnerPosition=secondNode.radius,secondLineOuterPosition=clusterNode.radius,t.push({index:e[0],LineInnerPosition:firstLineInnerPosition,LineOuterPosition:firstLineOuterPosition,LineAngle:firstLineAngle}),r.push({index:e[1],LineInnerPosition:secondLineInnerPosition,LineOuterPosition:secondLineOuterPosition,LineAngle:secondLineAngle})}),clusterLine1=clusterLine1.data(t,function(e){return e.index}),clusterLine1.enter().append("path"),clusterLine1.exit().remove(),clusterLine1.style("fill","green").attr("class","clusterLine").transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.index>nodesSize?e.LineInnerPosition+5:e.LineInnerPosition).outerRadius(e.LineOuterPosition+5).startAngle(e.LineAngle).endAngle(e.LineAngle+.002);return n()}),clusterLine2=clusterLine2.data(r,function(e){return e.index}),clusterLine2.enter().append("path"),clusterLine2.exit().remove(),clusterLine2.style("fill","green").attr("class","clusterLine").transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.index>nodesSize?e.LineInnerPosition+5:e.LineInnerPosition).outerRadius(e.LineOuterPosition+5).startAngle(e.LineAngle).endAngle(e.LineAngle+.002);return n()})}function drawHierarchicalClustering(e){drawArc(e),drawLine(e),darwClusterNodes()}function redraw(e){(e?svg.transition():svg).attr("transform","translate("+zoom.translate()+") scale("+zoom.scale()+")"),zoom.scale()<.8&&.8<zoomLevel<.9&&textBackground.attr("visibility","hidden"),zoom.scale()>=.7&&textBackground.attr("visibility","visible"),zoomLevel=zoom.scale()}function getHierNodes(e){function n(e){var i=clusterHierData[e][0],o=clusterHierData[e][1];maxNodeIndex>i?t.push({level:e,nodeId:i}):n(i-maxNodeIndex),maxNodeIndex>o?t.push({level:e,nodeId:o}):n(o-maxNodeIndex),r.push(e)}var t=[],r=[];return n(e-maxNodeIndex),{leafNodes:t,clusterNodesLevel:r}}function getLeafNodesPosition(e){var n=[];return e.map(function(e){n.push(transformIndex(e.nodeId))}),n}function getClusterNodeLevel(e){var n=[];return e.map(function(e){n.push(e.level)}),n.unique()}function getClusterGenes(e){var n=[];return e.map(function(e){go_inf[e].genes.map(function(e,t){n.push(e)})}),n.unique()}function calculateNewPvalue(e){var n=0;return e.map(function(e,t){n+=parseFloat(e.pVal)}),n/=e.length}function collapseNodeSet(e,n,t){var r=go_inf.splice(e[0],e.length),i=[],o=[];r.map(function(e){i.push(e.GO_id),o.push(e.GO_name)});var a=calculateNewPvalue(r);return newGONode={GO_id:i,GO_name:o,count:n.length,pVal:a,genes:n,nodeBeingClicked:t},go_inf.splice(e[0],0,newGONode),r}function expandNodeSet(e,n){var t;go_inf.map(function(n,r){n.nodeBeingClicked==e&&(t=r)}),go_inf.splice(t,1),n.map(function(e,n){go_inf.splice(t+n,0,e)})}function updateMatrix(){function e(e,n){var t=0;return e.map(function(e){-1!=n.indexOf(e)&&t++}),t}var n=[],t=[];return go_inf.map(function(r,i){t=[],go_inf.map(function(n,o){var a=0;if(i!=o)var a=e(r.genes,n.genes);t.push(a)}),n.push(t)}),matrix=n,n}function updateLayout(e){chord=chordMatrix.matrix(e),groupElements=groupElements.data(chord.groups()),groupElements.enter().append("svg:path"),groupElements.exit().remove(),groupLayout=groupElements.style("fill",function(e){return getColor(Number(go_inf[e.index].pVal),fill)}).style("stroke",function(e){return getColor(Number(go_inf[e.index].pVal),fill)}).attr("d",d3.svg.arc().innerRadius(r0).outerRadius(r1)).attr("id","chordGroups").on("mouseover",mouseover_group),chordElements=chordElements.data(chord.chords()),chordElements.enter().append("svg:path"),chordElements.exit().remove(),chordLayout=chordElements.attr("class","chord").attr("d",d3.svg.chord().radius(r0)).attr("id","chordChords").on("mouseover",mouseover_chord),chordLayout.classed("fade",function(e){return 1})}function getMinValuePosition(e){var n=0,t=array_order[e[0]];return e.map(function(e,r){array_order[e]<t&&(t=array_order[e],n=r)}),n}function calculateAClusterNodePosition(e,n,t,r,i,o,a){return nodesSize>e?(e=transformIndex(e),firstNode=chordGroupsNodePosition[e]):(e=transformIndex(e),firstNode=clusterHierNodesStatus[e]),nodesSize>n?(n=transformIndex(n),secondNode=chordGroupsNodePosition[n]):(n=transformIndex(n),secondNode=clusterHierNodesStatus[n]),angle=(firstNode.angle+secondNode.angle)/2,i==r&&"collapse"==t?radius=a:void 0!=o&&-1!=o.map(function(e){return e.nodeId}).indexOf(r)?o.map(function(e){e.nodeId==r&&(radius=e.radius)}):radius=firstNode.radius>secondNode.radius?firstNode.radius+5:secondNode.radius+5,[angle,radius]}function createClusterNodesStatus(e,n,t,r,o,a){for(i=0;i<e.length;i++)void 0!=e[i]&&(firstNode=e[i][0],secondNode=e[i][1],index=e[i][2],numOfOverlappingGenes=e[i][3],position=calculateAClusterNodePosition(firstNode,secondNode,t,index,n,o,a),n==index?"collapse"==t?nodeObj={index:index,angle:position[0],radius:position[1],numOfOverlappingGenes:numOfOverlappingGenes,status:"Collapsed"}:nodeObj={index:index,angle:position[0],radius:position[1],numOfOverlappingGenes:numOfOverlappingGenes,status:"Expanded"}:-1!=r.indexOf(index.toString())?nodeObj={index:index,angle:position[0],radius:position[1],numOfOverlappingGenes:numOfOverlappingGenes,status:"Collapsed"}:nodeObj={index:index,angle:position[0],radius:position[1],numOfOverlappingGenes:numOfOverlappingGenes,status:"Expanded"},clusterHierNodesStatus.push(nodeObj))}function removeNodesInArrayOrder(e){var n=[],t=[];return array_order.map(function(r,i){-1==e.indexOf(i)?n.push(r):(e.indexOf(i)==e.length-1&&n.push(r),t.push(r))}),old_array_order=array_order,array_order=n,t}function addNodesToArrayOrder(e){var n;array_order.map(function(t,r){-1!=e.indexOf(t)&&(n=r)}),array_order.splice(n,1),e.map(function(e,t){array_order.splice(n+t,0,e)})}function removeNodesInClusterData(e,n){var t=old_array_order[e[e.length-1]],r=[];return clusterHierData.map(function(e,i){-1==n.indexOf(i)?r.push(e):n.indexOf(i)==n.length-1?r.push([t,t,e[2]]):r.push(void 0)}),r}function addNodesInClusterData(e){return e.map(function(e,n){clusterHierData[e[2]-maxNodeIndex]=e}),clusterHierData}function getRemoveClusterData(e){var n=[];return e.map(function(e,t){n.push(clusterHierData[e])}),n}function collapseHierClustering(e,n,t,r,i){var o;clusterHierNodesStatus.map(function(e){e.index==t&&(o=e.radius)}),clusterHierNodesStatus=[],chordGroupsNodePosition=[],chord.groups().forEach(function(e,n){nodeObj={index:e.index,angle:(e.startAngle+e.endAngle)/2,radius:r1},chordGroupsNodePosition.push(nodeObj)});var a=getRemoveClusterData(n);return clusterHierData=removeNodesInClusterData(e,n),createClusterNodesStatus(clusterHierData,t,"collapse",r,i,o),1==labelOff&&drawHierarchicalClustering(clusterHierData),a}function expandHierClustering(e,n,t,r,i){clusterHierNodesStatus=[],chordGroupsNodePosition=[],chord.groups().forEach(function(e,n){nodeObj={index:e.index,angle:(e.startAngle+e.endAngle)/2,radius:r1},chordGroupsNodePosition.push(nodeObj)}),clusterHierData=addNodesInClusterData(e,n),createClusterNodesStatus(clusterHierData,t,"expand",r,i),1==labelOff&&drawHierarchicalClustering(clusterHierData)}function onClusterNodeClick(e,n){var t=e.index;if("Expanded"==e.status){var r=getHierNodes(t),i=getLeafNodesPosition(r.leafNodes).unique(),o=r.clusterNodesLevel,a=getClusterGenes(i),s=collapseNodeSet(i,a,t);createInteractionGenes(go_inf),createGeneInfo(),matrix=updateMatrix(),updateLayout(matrix);var d=removeNodesInArrayOrder(i),u=collapseHierClustering(i,o,t,Object.keys(memCache),memCache.clusterNodesRadius);if(void 0!=memCache.clusterNodesRadius)var l=memCache.clusterNodesRadius;else l=[];clusterHierNodesStatus.map(function(e){e.index==t&&l.push({nodeId:e.index,radius:e.radius})}),memCache.clusterNodesRadius=l;var c={go_inf:s,array_order:d,clusterHierData:u,clusterNodesLevel:o};memCache[t]=c}else{c=memCache[t],expandNodeSet(t,c.go_inf),createInteractionGenes(go_inf),createGeneInfo(),matrix=updateMatrix(),updateLayout(matrix),addNodesToArrayOrder(c.array_order);var g=getMemKey(memCache),o=c.clusterNodesLevel,l=memCache.clusterNodesRadius,p=[];l.map(function(e,n){e.nodeId!=t&&p.push(e)}),l=p,memCache.clusterNodesRadius=l,expandHierClustering(c.clusterHierData,o,t,g,l),delete memCache[t]}}function moveOutHierCluster(){var e=d3.selectAll(".clusterNode");e.transition().duration(500).attr("transform",function(e){return"rotate("+(180*e.angle/Math.PI-90)+")translate("+(e.radius+10)+",0)"});var n=d3.selectAll(".clusterArc");n.transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.radius+10).outerRadius(e.radius+11).startAngle(e.startAngle).endAngle(e.endAngle);return n()});var t=d3.selectAll(".clusterLine");t.transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.index>nodesSize?e.LineInnerPosition+5:e.LineInnerPosition).outerRadius(e.LineOuterPosition+5).startAngle(e.LineAngle).endAngle(e.LineAngle+.002);return n()})}function moveInHierCluster(){var e=d3.selectAll(".clusterNode");e.transition().duration(500).attr("transform",function(e){return"rotate("+(180*e.angle/Math.PI-90)+")translate("+e.radius+",0)"});var n=d3.selectAll(".clusterArc");n.transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.radius+5).outerRadius(e.radius+6).startAngle(e.startAngle).endAngle(e.endAngle);return n()});var t=d3.selectAll(".clusterLine");t.transition().duration(500).attr("d",function(e){var n=d3.svg.arc().innerRadius(e.LineInnerPosition).outerRadius(e.LineOuterPosition).startAngle(e.LineAngle).endAngle(e.LineAngle+.002);return n()})}function getLevelFromNumOfOverlappingGenes(e){var n=-1;return clusterHierDataStatic.map(function(t,r){t[1]>=e&&(n=r)}),n}function getClusterNodesIndexBeingSelected(e){var n=[];if(e>=level_g)for(var t=e;t>=0;t--){if(void 0!=clusterHierData[t]&&-1==n.indexOf(t)&&void 0==memCache[clusterHierData[t][2]]){var r=getHierNodes(clusterHierData[t][2]).clusterNodesLevel;r.map(function(e){return n.push(e)}),n=n.unique(),clusterNodesIndex.push(clusterHierData[r[r.length-1]][2])}clusterNodesIndex=clusterNodesIndex.unique()}else{var i=e+nodesSize,o=[];clusterNodesIndex.reverse().map(function(e,n){if(e>=i){o.push(n);var t=getClusterNode(e);onClusterNodeClick(t)}}),clusterNodesIndex.splice(o[0],o.length);for(var t=e;t>=0;t--)if(void 0!=clusterHierData[t]&&-1==n.indexOf(t)){var r=getHierNodes(clusterHierData[t][2]).clusterNodesLevel;r.map(function(e){return n.push(e)}),n=n.unique(),clusterNodesIndex.push(clusterHierData[r[r.length-1]][2])}clusterNodesIndex=clusterNodesIndex.unique()}0!=clusterNodesIndex.length&&clusterNodesIndex.map(function(e,n){clusterHierNodesStatus.map(function(n){e==n.index&&void 0==memCache[e]&&onClusterNodeClick(n)})}),level_g=e}function getClusterNode(e){var n;return clusterHierNodesStatus.map(function(t){t.index==e&&(n=t)}),n}function createGoHier(e){go_chart=d3.select("#go_chart").append("svg").attr("width",width).attr("height",height),go_chart.append("rect").style("fill","white").style("stroke","gray").attr("width",width).attr("height",height).attr("x",0).attr("y",0),update(e)}function mouseover_group(e,n){$("#content").empty(),chordLayout.classed("fade",function(e){return e.source.index!=n&&e.target.index!=n});var t="";go_inf[e.index].genes.forEach(function(e,n){var r="<p>"+(n+1)+"."+e+"</p>";t+=r});var r="<p> GO_id: "+go_inf[e.index].GO_id+"<p> GO_Name: "+go_inf[e.index].GO_name+" <p> Num of genes: "+go_inf[e.index].count+"<p> P-value: "+go_inf[e.index].pVal;$("#content").append(r+"<p>Genes:\n"+t),"string"==typeof go_inf[e.index].GO_id&&($("#content").append('<div id="go_chart"></div>'),createGoHier(go_inf[e.index].GO_id))}function mouseover_chord(e,n){$("#content").empty();var t=e.source.index+"-"+e.source.subindex,r="";dic[t].split("|").forEach(function(e,n){var t="<p>"+(n+1)+"."+e+"</p>";r+=t}),$("#content").append("<p>Overlapping genes between "+go_inf[e.source.index].GO_id+" and "+go_inf[e.source.subindex].GO_id+":\n</p>"+r)}function createOnClick(e){for(;0!=e.length;){var n=e.pop();$content=$("#content").on("click","#GO_button_"+n,function(e){var n=e.toElement.id.split("_")[2];chordLayout.classed("fade",function(e){return e.source.index!=n&&e.target.index!=n})})}$(".dropbtn").click(function(){$header=$(this),$content=$header.next(),$content.slideToggle(500,function(){})})}function getGenesFromACluster(e){var n="";return go_inf[e].genes.forEach(function(e,t){var r="<p>"+(t+1)+"."+e+"</p>";n+=r}),n}function renderGOTerm(e){var n="";for(i=0;i<e.length;i++){num=e[i],Go=go_inf[num].GO_id+" "+go_inf[num].GO_name;var t='<button class="dropbtn"id=GO_button_'+num+">"+Go+"</button>";t+='<div class="Go_content"><p> P-value: '+go_inf[num].pVal+" <p> Num of genes: "+go_inf[num].count+"<p>Genes: "+getGenesFromACluster(num)+"</div>",n+=t}return n}function getGoIndex(e){for(i in go_inf)if(go_inf[i].GO_id==e)return i}function isNum(e){if(""==e)return!1;for(arr=e.split(""),i=0;i<arr.length;i++)if(arr[i]<"0"||arr[i]>"9")return!1;return!0}function sortGOcontent(e){function n(e,n){return pa=Number(go_inf[e].pVal),pb=Number(go_inf[n].pVal),pa>pb?1:pa<pb?-1:0}e.sort(n)}function resetVis(){groupLayout.transition().duration(500).attr("d",d3.svg.arc().innerRadius(r0).outerRadius(r1)),chordLayout.transition().duration(500).attr("d",d3.svg.chord().radius(r0))}function refreshDetailPanel(){function e(e){if(isNum(e)||"GO"==e.split(":")[0].toUpperCase())return!0;for(var n=0;n<go_inf.length;n++)if(go_inf[n].GO_name==e.toLowerCase())return!0;return!1}$("#content").empty();var n=$("#filter").val();if(e(n)){resetVis();var t;if(isNum(n))n="GO:"+n,t=getGoIndex(n.toUpperCase());else if("GO"==n.split(":")[0].toUpperCase())t=getGoIndex(n.toUpperCase());else for(var r=0;r<go_inf.length;r++)go_inf[r].GO_name==n.toLowerCase()&&(t=r);void 0!=t&&(str="<p> GO_id: "+go_inf[t].GO_id+"<p> GO_Name: "+go_inf[t].GO_name+" <p> Num of genes: "+go_inf[t].count+"<p> P-value: "+go_inf[t].pVal,genes=getGenesFromACluster(t),$("#content").append(str+"<p>Genes:\n"+genes+'<div id="go_chart"></div>'),createGoHier(go_inf[t].GO_id),chordLayout.classed("fade",function(e){return e.source.index!=t&&e.target.index!=t}),groupLayout.transition().attr("d",d3.svg.arc().innerRadius(function(e){return e.index!=t?r0:r0+5}).outerRadius(function(e){return e.index!=t?r1:r1+5})),chordLayout.transition().attr("d",d3.svg.chord().radius(function(e){return e.index!=t?r0:r0+5})))}else{var i=gene_info[n];if(void 0!=i){var o=i.split(";"),a=[],s=[];for(t=0;t<o.length;t++){var d=parseInt(o[t]);s.push(d),a.push(d)}sortGOcontent(a),$("#content").append(renderGOTerm(a)),createOnClick(s);var u=[];for(t in o){var d=parseInt(o[t]);u.push(d)}groupLayout.transition().attr("d",d3.svg.arc().innerRadius(function(e){return-1==u.indexOf(e.index)?r0:r0+5}).outerRadius(function(e,n){return-1==u.indexOf(e.index)?r1:r1+5})),chordLayout.transition().attr("d",d3.svg.chord().radius(function(e){return-1==u.indexOf(e.index)?r0:r0+5}))}else resetVis()}}function drawLable(){labelOff=0,clusterArc.style("display","none"),clusterLine1.style("display","none"),clusterLine2.style("display","none"),clusterHierNodeView.style("display","none"),clusterHierNodeTextView.style("display","none"),groupText.style("display",""),updateLabel()}function updateLabel(){groupText.remove(),groupText=svg.append("svg:g").selectAll("g").data(chord.groups).enter().append("svg:g").attr("transform",function(e){return"rotate("+((e.startAngle+e.endAngle)/2*180/Math.PI-90)+")translate("+r1+",0)"}).append("svg:text").attr("x",8).attr("dy",".45em").attr("text-anchor",function(e){return(e.startAngle+e.endAngle)/2>Math.PI?"end":null}).attr("transform",function(e){return(e.startAngle+e.endAngle)/2>Math.PI?"rotate(180)translate(-16)":null}).text(function(e){return"string"==typeof go_inf[e.index].GO_id?go_inf[e.index].GO_name:getMaxLabel(go_inf[e.index].GO_name)+"+"})}function getMaxLabel(e){var n=0,t=0;return e.map(function(e,r){t<goLabelSize[e]&&(t=goLabelSize[e],n=r)}),e[n]}function drawHierCluster(){labelOff=1,clusterArc.style("display",""),clusterLine1.style("display",""),clusterLine2.style("display",""),clusterHierNodeView.style("display",""),clusterHierNodeTextView.style("display",""),groupText.style("display","none"),drawHierarchicalClustering(clusterHierData)}Array.prototype.intersection=function(){var e,n=this.length,t=arguments,r=[];for(e=0;n>e;e+=1)t[0].includes(this[e])&&r.push(this[e]);return r},Array.prototype.getGeneString=function(){for(var e="",n=this.length,t=arguments,r=0;n>r;r++)e+=this[r]+t[0];return e.slice(0,e.length-1)},Array.prototype.unique=function(){var e,n={},t=this.length,r=[];for(e=0;t>e;e+=1)n[this[e]]=this[e];for(e in n)r.push(n[e]);return r};var nodesSize=size,maxNodeIndex=size,old_array_order=[],clusterHierDataFiltered=[],clusterHierDataStatic=[];clusterHierData.map(function(e){clusterHierDataStatic.push([e[2],e[3]])});var maxNumOfOverlappingGens=clusterHierData[0][3],minNumOfOverlappingGens=clusterHierData[clusterHierData.length-1][3],memCache={},gene_info={},labelOff=0,clusterHierNodesStatus=[],chordGroupsNodePosition=[];go_inf.forEach(function(e,n){go_inf[n].genes=e.genes.split("|")}),createGeneInfo();var dic={};createInteractionGenes(go_inf);var chordMatrix=d3.layout.chord().padding(.03).sortSubgroups(d3.descending),chord=chordMatrix.matrix(matrix),w=1200,h=1100,r0=.25*Math.min(w,h),r1=1.1*r0,width=400,height=600,force=d3.layout.force().charge(-3e3).linkDistance(50).theta(.2).gravity(1).size([width,height]),svg,go_chart,maxpVal=getMaxPval(),minpVal=getMinPval(),pVal_sort=[];sortGO_inf();var range=maxpVal-minpVal,step=range/10,seperated_points=[],panel=[];for(i=0;i<11;i++)seperated_points.push(minpVal+step*i);var fill=d3.scale.ordinal().domain(d3.range(12).reverse()).rangeRoundPoints([1,255]),color_scheme=["#1249C9","#0F399B","#0A2B76","#0F2147","#2C3645","#82733D","#E1C03B","#E6AE29","#F2AB1C","#FFAB00"].reverse();createPvalLabelPanel(fill);var zoom=d3.behavior.zoom().translate([w/2,h/2]),svg=d3.select("#chart").append("svg:svg").attr("width",w).attr("height",h).call(zoom.on("zoom",redraw)).append("svg:g").attr("id","circle").attr("transform","translate("+w/2+","+h/2+")");svg.append("circle").attr("r",r1),chord.groups().forEach(function(e,n){nodeObj={index:e.index,angle:(e.startAngle+e.endAngle)/2,radius:r1},chordGroupsNodePosition.push(nodeObj)}),createClusterNodesStatus(clusterHierData,[],"",[]);var clusterArc=svg.append("svg:g").selectAll("g").data(clusterHierData).enter().append("path"),clusterLine1=svg.append("svg:g").selectAll("g").data(clusterHierData).enter().append("path"),clusterLine2=svg.append("svg:g").selectAll("g").data(clusterHierData).enter().append("path"),clusterHierNodeView=svg.append("svg:g").selectAll("g").data(clusterHierNodesStatus).enter().append("svg:g"),circle=clusterHierNodeView.attr("transform",function(e){return"rotate("+(180*e.angle/Math.PI-90)+")translate("+(e.radius+5)+",0)"}).attr("id","clusterNode").append("circle").append("title").text(function(e,n){return"Click to cluster"}),clusterHierNodeTextView=svg.append("svg:g").selectAll("g").data(clusterHierNodesStatus).enter().append("svg:g");drawHierarchicalClustering(clusterHierData);var groupElements=svg.append("svg:g").selectAll("path").data(chord.groups).enter().append("svg:path"),groupLayout=groupElements.style("fill",function(e){return getColor(Number(go_inf[e.index].pVal),fill)}).style("stroke",function(e){return getColor(Number(go_inf[e.index].pVal),fill)}).attr("d",d3.svg.arc().innerRadius(r0).outerRadius(r1)).attr("id","chordGroups").on("mouseover",mouseover_group),goLabelSize={};determineLabelSize(),go_inf.map(function(e){void 0==goLabelSize[e.GO_name]&&(goLabelSize[e.GO_name]=e.size)});var chordElements=svg.append("svg:g").selectAll("path").data(chord.chords).enter().append("svg:path"),chordLayout=chordElements.attr("class","chord").attr("d",d3.svg.chord().radius(r0)).attr("id","chordChords").on("mouseover",mouseover_chord),range=document.getElementById("slider");noUiSlider.create(range,{start:[maxNumOfOverlappingGens+1],step:1,margin:0,direction:"rtl",orientation:"horizontal",range:{min:minNumOfOverlappingGens,max:maxNumOfOverlappingGens+1}});var level_g=0,clusterNodesIndex=[],inputFormat=document.getElementById("input_slider");range.noUiSlider.on("update",function(e,n){inputFormat.value=e[n]}),range.noUiSlider.on("change",function(e,n){var t=getLevelFromNumOfOverlappingGenes(inputFormat.value);getClusterNodesIndexBeingSelected(t),0==labelOff&&updateLabel()}),inputFormat.addEventListener("change",function(){range.noUiSlider.set(this.value);var e=getLevelFromNumOfOverlappingGenes(this.value);getClusterNodesIndexBeingSelected(e),0==labelOff&&updateLabel()});var groupText=svg.append("svg:g").selectAll("g").data(chord.groups).enter().append("svg:g"),text=groupText.selectAll("g").data(chord.groups).enter().append("svg:g").attr("transform",function(e){return"rotate("+((e.startAngle+e.endAngle)/2*180/Math.PI-90)+")translate("+r1+",0)"}).append("svg:text").attr("x",8).attr("dy",".45em").attr("text-anchor",function(e){return(e.startAngle+e.endAngle)/2>Math.PI?"end":null}).attr("transform",function(e){return(e.startAngle+e.endAngle)/2>Math.PI?"rotate(180)translate(-16)":null}).text(function(e){return"string"==typeof go_inf[e.index].GO_id?go_inf[e.index].GO_name:getMaxLabel(go_inf[e.index].GO_name)+"+"});drawLable(),$(".radioButton").change(function(){switch(this.value){case"0":drawLable();break;case"1":drawHierCluster()}}),$("#filter").keydown(function(e){13==e.which&&refreshDetailPanel()}),$("#filter_button").click(function(){refreshDetailPanel()});